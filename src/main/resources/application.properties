# DATABASE CONFIGURATION LOCAL TOMCAT
spring.datasource.url= jdbc:mysql://localhost:3306/restaurant?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.username=restaurant
spring.datasource.password=restaurant

# DATABASE CONFIGURATION HEROKU POSTGRESQL
#spring.jpa.database=postgresql
#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update

## Hibernate Logging
logging.level.org.hibernate.SQL=DEBUG

## Jackson Properties
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS= false
spring.jackson.time-zone=UTC

## App Properties
#JWTSuperSecretKey
app.jwtSecret=h2ia83mao20s
app.jwtExpirationInMs=604800000

#AMAZON CONFIG
aws.accessKeyId=${AWS_ACCESS_KEY_ID}
aws.secretAccessKey=${AWS_SECRET_ACCESS_KEY}

#EMAIL CONFIGURATION
spring.mail.default-encoding=UTF-8
spring.mail.host=smtp.gmail.com
spring.mail.username=${EMAIL_IT}
spring.mail.password=${EMAIL_IT_PASS}
spring.mail.port=587
spring.mail.protocol=smtp
spring.mail.test-connection=false
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true