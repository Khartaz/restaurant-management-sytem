server.port=8888

# DATABASE CONFIGURATION LOCAL MYSQL
#spring.datasource.url=${DB_URL}
#spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}

# DATABASE CONFIGURATION HEROKU POSTGRESQL
spring.jpa.database=postgresql
spring.datasource.url=${DATABASE_URL}

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.hibernate.ddl-auto=none
## Hibernate Logging
logging.level.org.hibernate.SQL=DEBUG

## Jackson Properties
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=true
spring.jackson.time-zone=UTC

## App Properties
#JWTSuperSecretKey
app.jwtSecret=h2ia83mao20s
app.jwtExpirationInMs=604800000

# EMAIL CONFIGURATION
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.jackson.serialization.fail-on-empty-beans=false

# ONLY REMOTE CONFIG DELETE BEFORE PUSH TO GIT
spring.mail.username=${EMAIL_IT}
spring.mail.password=${EMAIL_IT_PASS}

#spring.datasource.url=${DB_URL}
#spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# Tell Spring Security (if used) to require requests over HTTPS

## The format used for the keystore
#server.ssl.key-store-type=PKCS12
## The path to the keystore containing the certificate
#server.ssl.key-store=keystore.p12
## The password used to generate the certificate
#server.ssl.key-store-password=${DB_PASSWORD}
## The alias mapped to the certificate
#server.ssl.key-alias=restaurant
